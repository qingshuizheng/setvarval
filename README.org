#+title: SetVarVal - (Setq Var Val)


* Why

Too often, I explore one new package by extracting its defcustom/defface/defvar/defconst (mainly the first two), and organizing them into a new style. This package do some stuff for me.

There might be better packages for this, but this is mine.

* Examples

This is what it looks like after extraction from Emacs builtin =simple.el= with default settings. It is truncated due to long list.

#+begin_src emacs-lisp
;; This is automatically collected with setvarval, hundreds of lines:
(setq idle-update-delay 0.5)
(setq next-error-highlight 0.5)
(setq next-error-highlight-no-select 0.5)
(setq next-error-recenter nil)
(setq next-error-message-highlight nil)
(setq next-error-hook nil)
(setq next-error-verbose t)
(setq next-error-find-buffer-function #'ignore)
(setq next-error-found-function #'ignore)
;; .
;; .
;; .
;; .
;; more and more and more going on...
#+end_src


If cursor within =use-package=, and =setvarval-group-style= is set to =use-package:custom=:

#+begin_src emacs-lisp

(use-package simple
  ;; This line below is automatically collected with setvarval, hundreds of lines:
  :custom
  (idle-update-delay 0.5)
  (next-error-highlight 0.5)
  (next-error-highlight-no-select 0.5)
  (next-error-recenter nil)
  (next-error-message-highlight nil)
  (next-error-hook nil)
  (next-error-verbose t)
  (next-error-find-buffer-function #'ignore)
  (next-error-found-function #'ignore)
  ;; .
  ;; .
  ;; .
  ;; .
  ;; more and more and more going on...
  )

#+end_src


* Installation

#+begin_src emacs-lisp
(use-package setvarval
  :straight (:host "github" :repo "qingshuizheng/setvarval")
  :config
  (setq setvarval-extract-type 'defcustom) ; 'defvar, 'defconst, 'defface
  (setq setvarval-group-setter 'setq)      ; 'setopt, 'customize-set-variables
  (setq setvarval-group-style 'simple)     ; 'simple, 'group 'use-package 'leaf 'setup
  )
#+end_src

* Usage

1. (optional) =M-x setvarval-config RET= to config variables.
2. =M-x setvarval-extract-current-buffer RET= to collect configs from current buffer into kill-ring. Prefix with =C-u= to preconfig.
3. =M-x setvarval-extract-current-package RET= to collect configs from package name if cursor is wrapped in a package manager like =use-package/leaf/setup=. Prefix with =C-u= to preconfig.
4. =M-x setvarval-extract-current-package-insert RET= act like above, but insert configs depending on the vaule of =setvarval-group-style=. Prefix with =C-u= to preconfig.
5. =M-x setvarval-extract-from-name= to collect configs from selected loaded feature. Features not loaded are currently not supported.
6. Only names with "insert" will insert configs.

* Features (no ETA)

- extract type
  - [X] defcustom
  - [X] defface
  - [X] defvar
  - [X] defconst
- group setter
  - [X] setq
  - [X] setopt
  - [X] customize-set-variables/faces
  - [X] empty
- group styles
  - [X] simple
  - [X] one-setter
  - [X] custom-set-*
  - [X] use-package:custom
  - [X] use-package:custom-face
  - [X] leaf:custom*
  - [X] leaf:custom
  - [X] leaf:custom-face
  - [X] setup:option
- content-aware
  - [X] use-package
  - [X] setup
  - [X] leaf
- /TODO/ list
  - [ ] support collecting configs from features not yet loaded.
  - [ ] keep val as original state, e.g., ?% instead of 37

* Inspirations

[[https://github.com/rubikitch/auto-document][rubikitch/auto-document]]
