#+title: SetVarVal - (Setq Var Val)


* Why

Too often, when we are faced with a new package, one way to explore it is to extract the variables (defcustom/defvar/defconst/defface) and reorganize in a new style. This package saves you some time.

There might be some better packages to do it, but this is my own.

* Example

This is what it looks like after extraction from Emacs builtin =simple.el= with default settings. It is truncated due to long list, and it is the reason why this package exists. :-)

#+begin_src emacs-lisp
(setq idle-update-delay 0.5)
(setq next-error-highlight 0.5)
(setq next-error-highlight-no-select 0.5)
(setq next-error-recenter nil)
(setq next-error-message-highlight nil)
(setq next-error-hook nil)
(setq next-error-verbose t)
(setq next-error-find-buffer-function #'ignore)
(setq next-error-found-function #'ignore)
(setq delete-trailing-lines t)
(setq read-quoted-char-radix 8)
(setq cycle-spacing-actions '(just-one-space delete-all-space restore))
(setq delete-active-region t)
(setq goto-line-history-local nil)
.
.
.
.
more and more and more going on...
#+end_src

* Installation

#+begin_src emacs-lisp
(use-package setvarval
  :straight (:host "github" :repo "qingshuizheng/setvarval")
  :config
  (setq setvarval-extract-type 'defcustom) ; 'defvar, 'defconst, 'defface
  (setq setvarval-group-setter 'setq)      ; 'setopt, 'customize-set-variables
  )
#+end_src

* Usage

Go to the package buffer and =M-x varext-extract RET=, variables will be saved to kill-ring. If you need to change setter and variable type, prefix =C-u= before the command to trigger settings.

* TODO list (no ETA)

- extract type
  - [X] defcustom
  - [X] defface
  - [X] defvar
  - [X] defconst
- group setter
  - [ ] setq
  - [ ] setopt
  - [ ] customize-set-variables
  - [ ] empty setter
- group styles
  - [ ] use-package
  - [ ] leaf
  - [ ] setup
  - [ ] vanilla
    - [ ] default: one line
    - [ ] flatten: grouping wih only one setter
- content-aware
  - [ ] use-package
  - [ ] leaf
  - [ ] setup
  - [ ] non of the above, select from feature or file, with prefix with arg

* Inspirations

[[https://github.com/rubikitch/auto-document][rubikitch/auto-document]]
